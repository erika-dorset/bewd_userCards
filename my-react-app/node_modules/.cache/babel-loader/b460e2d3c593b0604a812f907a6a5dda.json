{"ast":null,"code":"var _jsxFileName = \"/workspace/bewd_userCards/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // This loads data from a file named 'data.json' in the same directory\n\nimport data from \"./data\"; // Store the array of user objects in a variable\n\nconst users = data.results; // [{user},{user}, ...]\n// Component to represent a single User 'Card' (note: this is a function component so cannot use state)\n\nfunction User(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Profile\",\n    src: props.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props.quote));\n} // Iterate across all elements (u) in the users array, producing a User component for each\n// Data is passed into the components via props\n\n\nconst userList = users.map(u => /*#__PURE__*/React.createElement(User, {\n  key: u.name.first,\n  name: u.name.first,\n  image: u.picture.medium,\n  quote: u.quote,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n})); // Render all the User components in a 'grid' layout\n\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n}, userList), document.getElementById(\"root\"));","map":{"version":3,"sources":["/workspace/bewd_userCards/my-react-app/src/index.js"],"names":["React","ReactDOM","data","users","results","User","props","image","name","quote","userList","map","u","first","picture","medium","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,MAAMC,KAAK,GAAGD,IAAI,CAACE,OAAnB,C,CAA4B;AAE5B;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,SAAT;AAAmB,IAAA,GAAG,EAAEA,KAAK,CAACC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACE,IAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACG,KAAV,CAHF,CADF;AAOD,C,CAED;AACA;;;AACA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAUC,CAAC,iBAC1B,oBAAC,IAAD;AACE,EAAA,GAAG,EAAEA,CAAC,CAACJ,IAAF,CAAOK,KADd;AAEE,EAAA,IAAI,EAAED,CAAC,CAACJ,IAAF,CAAOK,KAFf;AAGE,EAAA,KAAK,EAAED,CAAC,CAACE,OAAF,CAAUC,MAHnB;AAIE,EAAA,KAAK,EAAEH,CAAC,CAACH,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADe,CAAjB,C,CASA;;AACAR,QAAQ,CAACe,MAAT,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMN,QAAN,CAAhB,EAAuCO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// This loads data from a file named 'data.json' in the same directory\nimport data from \"./data\";\n\n// Store the array of user objects in a variable\nconst users = data.results; // [{user},{user}, ...]\n\n// Component to represent a single User 'Card' (note: this is a function component so cannot use state)\nfunction User(props) {\n  return (\n    <div>\n      <img alt=\"Profile\" src={props.image} />\n      <h2>{props.name}</h2>\n      <p>{props.quote}</p>\n    </div>\n  );\n}\n\n// Iterate across all elements (u) in the users array, producing a User component for each\n// Data is passed into the components via props\nconst userList = users.map(u => (\n  <User\n    key={u.name.first}\n    name={u.name.first}\n    image={u.picture.medium}\n    quote={u.quote}\n  />\n));\n\n// Render all the User components in a 'grid' layout\nReactDOM.render(<div>{userList}</div>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}